#================================================
# MAR 31, 2015: Enable circular buffer

record(calcout, "$(S1){$(D1)-$(SD6)}DI:Fill-Calc") {
  field(DESC,   "Circular buffer acquiring:")
  field(CALC,   "(A&B)?1:0")
  field(INPA,   "$(S1){$(D1)}DI:Ep2F-I CPP")
  field(INPB,   "32768")
  field(OUT,    "$(S1){$(D1)-$(SD6)}DI:Fill-Sts PP")
}

record(bi,      "$(S1){$(D1)-$(SD6)}DI:Fill-Sts") {
  field(ZNAM,   "Stopped")
  field(ONAM,   "Acquiring")
  field(FLNK,   "$(S1){$(D1)-$(SD6)}DI:FillSt-Calc")
}

record(calcout, "$(S1){$(D1)-$(SD6)}DI:FillSt-Calc") {
  field(CALC,   "A")
  field(INPA,   "$(S1){$(D1)-$(SD6)}DI:Fill-Sts")
  field(OOPT,   "Transition To Non-zero")
  field(OUT,    "$(S1){$(D1)-$(SD6)}DI:FillStart PP")
}

record(bi,      "$(S1){$(D1)-$(SD6)}DI:FillStart") {
  field(PINI,   "YES")
  field(ZNAM,   "NOT started")
  field(ONAM,   "Started")
}

record(ao,      "$(S1){$(D1)-$(SD6)}State:Prog-Sts") {
  field(DESC,   "Arming the circular buffer:")
  field(LOPR,   "0")
  field(HOPR,   "11")
  field(PINI,   "YES")
}

record(seq,     "$(S1){$(D1)-$(SD6)}State:Arm00") {
  field(DO1,    "0")
  field(LNK1,   "$(S1){$(D1)-$(SD6)}Enbl:Write PP")
#
  field(DO2,    "1")
  field(LNK2,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO3,    "1")
  field(LNK3,   "$(S1){$(D1)-$(SD6)}Enbl:Read PP")
  field(DLY3,   "1")
#
  field(DO4,    "2")
  field(LNK4,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO5,    "1")
  field(LNK5,   "$(S1){$(D1)-$(SD6)}Rst:Cmd PP")
  field(DLY5,   "1")
#
  field(DO6,    "3")
  field(LNK6,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO7,    "0")
  field(LNK7,   "$(S1){$(D1)-$(SD6)}Enbl:Read PP")
  field(DLY7,   "1")
#
  field(DO8,    "4")
  field(LNK8,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO9,    "1")
  field(LNK9,   "$(S1){$(D1)-$(SD6)}Enbl:Write PP")
  field(DLY9,   "1")
#
  field(DOA,    "5")
  field(LNKA,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
  field(FLNK,   "$(S1){$(D1)-$(SD6)}State:Arm10")
}

record(seq,     "$(S1){$(D1)-$(SD6)}State:Arm10") {
  field(DO1,    "1")
  field(LNK1,   "$(S1){$(D1)-$(SD6)}Enbl:Arm PP")
  field(DLY1,   "1")
#
  field(DO2,    "6")
  field(LNK2,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO3,    "1")
  field(LNK3,   "$(S1){$(D1)-$(SD6)}Enbl:Arm PP")
  field(DLY3,   "1")
#
  field(DO4,    "7")
  field(LNK4,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO5,    "1")
  field(LNK5,   "$(S1){$(D1)}Trig:CircA-Cmd PP")
  field(DLY5,   "10")
#
  field(DO6,    "8")
  field(LNK6,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO7,    "1")
  field(LNK7,   "$(S1){$(D1)-$(SD6)}Rst:Cmd PP")
  field(DLY7,   "5")
#
  field(DO8,    "9")
  field(LNK8,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO9,    "0")
  field(LNK9,   "$(S1){$(D1)-$(SD6)}Enbl:Read PP")
  field(DLY9,   "1")
#
  field(DOA,    "0")
  field(LNKA,   "$(S1){$(D1)-$(SD6)}Rdy:I PP")
  field(FLNK,   "$(S1){$(D1)-$(SD6)}State:Arm20")
}
#
# MAY 16, 2015 - Trip circular buffer twice
#
record(seq,     "$(S1){$(D1)-$(SD6)}State:Arm20") {
  field(DO1,    "1")
  field(LNK1,   "$(S1){$(D1)-$(SD6)}Enbl:Write PP")
  field(DLY1,   "1")
#
  field(DO2,    "10")
  field(LNK2,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO3,    "1")
  field(LNK3,   "$(S1){$(D1)-$(SD6)}Enbl:Arm PP")
  field(DLY3,   "1")
#
  field(DO4,    "11")
  field(LNK4,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO5,    "1")
  field(LNK5,   "$(S1){$(D1)}Trig:CircA-Cmd PP")
  field(DLY5,   "2")
#
  field(DO6,    "12")
  field(LNK6,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
  field(FLNK,   "$(S1){$(D1)-$(SD6)}State:Arm30")
}

record(seq,     "$(S1){$(D1)-$(SD6)}State:Arm30") {
  field(DO1,    "0")
  field(LNK1,   "$(S1){$(D1)-$(SD6)}Cnt:Chg PP")
  field(FLNK,   "$(S1){$(D1)-$(SD6)}State:Arm40")
}

record(seq,     "$(S1){$(D1)-$(SD6)}State:Arm40") {
  field(DO1,    "1")
  field(LNK1,   "$(S1){$(D1)-$(SD6)}Rst:Cmd PP")
  field(DLY1,   "5")
#
  field(DO2,    "13")
  field(LNK2,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO3,    "0")
  field(LNK3,   "$(S1){$(D1)-$(SD6)}Enbl:Read PP")
  field(DLY3,   "1")
#
  field(DO4,    "14")
  field(LNK4,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO5,    "1")
  field(LNK5,   "$(S1){$(D1)-$(SD6)}Enbl:Write PP")
  field(DLY5,   "1")
#
  field(DO6,    "1")
  field(LNK6,   "$(S1){$(D1)-$(SD6)}Enbl:Arm PP")
  field(DLY6,   "1")
#
  field(DO7,    "15")
  field(LNK7,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
#
  field(DO8,    "0")
  field(LNK8,   "$(S1){$(D1)-$(SD6)}State:Prog-Sts PP")
  field(DLY8,   "0")
}

#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
record(bo,       "$(S1){$(D1)-$(SD6)}Cmd:Read") {
  field(DESC,    "Circ buf read:")
  field(ZNAM,    "Idle")
  field(ONAM,    "Read")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}State:Read")
}

record(seq,      "$(S1){$(D1)-$(SD6)}State:Read") {
    field(SELM,  "Mask")
    field(SELL,  "$(S1){$(D1)-$(SD6)}Cmd:Read")
    field(DOL1,  "$(S1){$(D1)-$(SD6)}Cmd:Read")
    field(LNK1,  "$(S1){$(D1)-$(SD6)}Val:IQ0-I.PROC")
}

record(waveform, "$(S1){$(D1)-$(SD6)}Val:IQ0-I") {
    field(DESC,  "Circ buf raw:")
    field(DTYP,  "asynInt16ArrayIn")
    field(INP ,  "@asyn($(PORT),$(ADDR))CIRC IQ")
    field(SCAN,  "I/O Intr")
    field(FTVL,  "SHORT")
# 16777216 = 16M = 0x01000000 short values
    field(NELM,  "$(NELM1)")
    field(FLNK,  "$(S1){$(D1)-$(SD6)}Size:P")
}

record(ai,       "$(S1){$(D1)-$(SD6)}Size:P") {
  field(DESC,    "Circ buf page size:")
  field(VAL,     "512")
  field(PINI,    "YES")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Pos:Page")
}

record(longin,   "$(S1){$(D1)-$(SD6)}Cnt:Wrap") {
  field(DESC,    "Wrap count:")
  field(DTYP,    "asynInt32")
  field(INP,     "@asyn($(PORT),0)RAM WrapCnt")
  field(SCAN,    "I/O Intr")
}

record(longin,   "$(S1){$(D1)-$(SD6)}Pos:PLast") {
  field(DESC,    "SDRAM last page:")
  field(DTYP,    "asynInt32")
  field(INP,     "@asyn($(PORT),0)RAM Lastpage")
  field(SCAN,    "I/O Intr")
}

record(calc,     "$(S1){$(D1)-$(SD6)}Pos:P1") {
  field(DESC,    "Pageloc:")
  field(CALC,    "(1.0*A+B)*C")
# Circular buffer: lastpage
# Running update value
  field(INPA,    "$(S1){$(D1)}DI:Ep2D-I")
# MATLAB file: llrf100909_record.m line No 17
  field(INPB,    "3")
  field(INPC,    "$(S1){$(D1)-$(SD6)}Size:P")
#
# Linked form okWireOut.db, WireOut:Ep2d - through fanout
# Dont, unwrap, just for display
#
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cnt:Chg-Calc")
}

#=============================================================
# JAN. 25, 2016: Count changes of value of enpoint 0x2d
# Use count > 3 as indicator thar buffer actually started
# acquiring. Don't set Ready for phase jump before count has
# reached at least 3
#
record(calcout,  "$(S1){$(D1)-$(SD6)}Cnt:Chg-Calc") {
  field(CALC,    "A")
  field(INPA,    "$(S1){$(D1)}DI:Ep2D-I")
  field(OOPT,    "On Change")
  field(INPB,    "$(S1){$(D1)-$(SD6)}Cnt:Chg")
  field(OCAL,    "B+1")
  field(DOPT,    "Use OCAL")
  field(OUT,     "$(S1){$(D1)-$(SD6)}Cnt:Chg PP")
}

record(longin,   "$(S1){$(D1)-$(SD6)}Cnt:Chg") {
  field(PINI,    "YES")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Rdy:Run-Calc")
}

record(calcout,  "$(S1){$(D1)-$(SD6)}Rdy:Run-Calc") {
  field(CALC,    "(A>3)?1:0")
  field(INPA,    "$(S1){$(D1)-$(SD6)}Cnt:Chg")
  field(OUT,     "$(S1){$(D1)-$(SD6)}Rdy:Run PP")
}

record(bo,       "$(S1){$(D1)-$(SD6)}Rdy:Run") {
  field(DESC,    "Address pointer updating:")
  field(ZNAM,    "NO")
  field(ONAM,    "YES")
}
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#=============================================================

record(calcout,  "$(S1){$(D1)-$(SD6)}Pos:Page") {
  field(DESC,    "Pageloc:")
  field(CALC,    "(1.0*A+B)*C")
# Circular buffer: lastpage
# Locked value at circular buffer trip
  field(INPA,    "$(S1){$(D1)-$(SD6)}Pos:PLast")
# MATLAB file: llrf100909_record.m line No 17
  field(INPB,    "3")
  field(INPC,    "$(S1){$(D1)-$(SD6)}Size:P")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cmd:Unwrap")
#
# Unwrap and display the circular buffer
# 
}

record(aSub,     "$(S1){$(D1)-$(SD6)}Cmd:Unwrap") {
 field(SNAM,     "CircUnwr")
 field(FTA ,     "SHORT")
 field(NOA ,     "$(NELM1)")
 field(FTVA,     "SHORT")
 field(NOVA,     "$(NELM1)")
 field(INPA,     "$(S1){$(D1)-$(SD6)}Val:IQ0-I")
 field(INPB,     "$(S1){$(D1)-$(SD6)}Pos:Page")
 field(OUTA,     "$(S1){$(D1)-$(SD6)}Val:IQ1-Buf")
 field(FLNK,     "$(S1){$(D1)-$(SD6)}Val:IQ1-Buf")
}

record(waveform, "$(S1){$(D1)-$(SD6)}Val:IQ1-Buf") {
  field(DESC,    "Circ buf unwrapped:")
  field(FTVL,    "SHORT")
# 16777216 = 16M = 0x01000000 short values
  field(NELM,    "$(NELM1)")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cmd:Invert")
}

record(aSub,     "$(S1){$(D1)-$(SD6)}Cmd:Invert") {
#
# Invert every second sample, -I, -Q to I, Q == MATLAB ++-- sequence remover
#
 field(SNAM,     "CircInvPairs")
 field(FTA ,     "SHORT")
 field(NOA ,     "$(NELM1)")
 field(FTVA,     "SHORT")
 field(NOVA,     "$(NELM1)")
 field(INPA,     "$(S1){$(D1)-$(SD6)}Val:IQ1-Buf")
 field(OUTA,     "$(S1){$(D1)-$(SD6)}Val:IQ2-Buf ")
 field(FLNK,     "$(S1){$(D1)-$(SD6)}Val:IQ2-Buf")
}

record(waveform, "$(S1){$(D1)-$(SD6)}Val:IQ2-Buf") {
    field(DESC,  "Circ buf signed:")
    field(FTVL,  "SHORT")
# 16M = 0x01000000 short values
    field(NELM,  "$(NELM1)")
    field(FLNK,  "$(S1){$(D1)-$(SD6)}Val:Smpl-Calc")
}

record(calc,     "$(S1){$(D1)-$(SD6)}Val:Smpl-Calc") {
    field(DESC,  "Elapsed samples:")
#
# MATLAB file llrf100909_record.m, line No 44
# elapsedsamples = (wrapctr-1)*memsize/2 + pageloc
#
    field(CALC,  "(A-1)*B+C")
    field(INPA,  "$(S1){$(D1)-$(SD6)}Cnt:Wrap")
    field(INPB,  "$(NELM1)")
    field(INPC,  "$(S1){$(D1)-$(SD6)}Pos:Page")
    field(FLNK,  "$(S1){$(D1)-$(SD6)}Cmd:Part")
}

#
# Separate parts with signal and quadrant alignment
#
# Input data: unwrapped 32Mb waveform of I/Q values as short integers: $(S1){$(D1)-$(SD6)}Circbuf-I2_
# Output 5 waveforms, one for each channel, with I/Q values $(S1){$(D1)-$(SD6)}Ch0:I-I, $(S1){$(D1)-$(SD6)}Ch0:Q-I ... $(S1){$(D1)-$(SD6)}Ch4:I-I, $(S1){$(D1)-$(SD6)}Ch4:Q-I ...
#

record(aSub,     "$(S1){$(D1)-$(SD6)}Cmd:Part") {
  field(DESC,    "Circ buf extract:")
  field(SNAM,    "CircPart")
  field(NOA,     "$(NELM1)")
  field(FTA,     "SHORT")
  field(INPA,    "$(S1){$(D1)-$(SD6)}Val:IQ2-Buf")
  field(INPB,    "$(S1){$(D1)-$(SD6)}Val:Smpl-Calc")
#
  field(NOVA,    "$(NELM2)")
  field(FTVA,    "DOUBLE")
  field(OUTA,    "$(S1){$(D1)-$(SD6)-$(TD1):0}Val:I-I PP MMS")
#
  field(NOVB,    "$(NELM2)")
  field(FTVB,    "DOUBLE")
  field(OUTB,    "$(S1){$(D1)-$(SD6)-$(TD1):0}Val:Q-I PP MMS")
#
  field(NOVC,    "$(NELM2)")
  field(FTVC,    "DOUBLE")
  field(OUTC,    "$(S1){$(D1)-$(SD6)-$(TD1):1}Val:I-I PP MMS")
#
  field(NOVD,    "$(NELM2)")
  field(FTVD,    "DOUBLE")
  field(OUTD,    "$(S1){$(D1)-$(SD6)-$(TD1):1}Val:Q-I PP MMS")
#
  field(NOVE,    "$(NELM2)")
  field(FTVE,    "DOUBLE")
  field(OUTE,    "$(S1){$(D1)-$(SD6)-$(TD1):2}Val:I-I PP MMS")
#
  field(NOVF,    "$(NELM2)")
  field(FTVF,    "DOUBLE")
  field(OUTF,    "$(S1){$(D1)-$(SD6)-$(TD1):2}Val:Q-I PP MMS")
#
  field(NOVG,    "$(NELM2)")
  field(FTVG,    "DOUBLE")
  field(OUTG,    "$(S1){$(D1)-$(SD6)-$(TD1):3}Val:I-I PP MMS")
#
  field(NOVH,    "$(NELM2)")
  field(FTVH,    "DOUBLE")
  field(OUTH,    "$(S1){$(D1)-$(SD6)-$(TD1):3}Val:Q-I PP MMS")
#
  field(NOVI,    "$(NELM2)")
  field(FTVI,    "DOUBLE")
  field(OUTI,    "$(S1){$(D1)-$(SD6)-$(TD1):4}Val:I-I PP MMS")
#
  field(NOVJ,    "$(NELM2)")
  field(FTVJ,    "DOUBLE")
  field(OUTJ,    "$(S1){$(D1)-$(SD6)-$(TD1):4}Val:Q-I PP MMS")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cmd:SyncRd")
}

record(acalcout, "$(S1){$(D1)-$(SD6)}T:CircCnt_Fill_") {
  field(DESC,    "Fills circ buf X:")
  field(CALC,    "IX")
  field(NELM,    "$(NELM2)")
  field(NUSE,    "$(NELM2)")
  field(OUT,     "$(S1){$(D1)-$(SD6)}T:CircCnt-I")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}T:CircCnt-I")
  field(PINI,    "YES")
}

record(waveform, "$(S1){$(D1)-$(SD6)}T:CircCnt-I") {
  field(DESC,    "Circular buffer X:")
  field(FTVL,    "ULONG")
# NELM2 = 0x1A0000 = 1703936 = each (of 5 scope) sample arrays
  field(NELM,    "$(NELM2)")
  field(EGU ,    "Count")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}T:CircPeriod_")
}

record(calc,     "$(S1){$(D1)-$(SD6)}T:CircPeriod_") {
  field(DESC,    "Circ clk period:")
  field(CALC,    "(A/B)*D")
  field(INPA,    "$(S1){$(D1)}Val:ScaleDAC")
  field(INPB,    "$(S1){$(D1)}Freq:I")
  field(INPD,    "1E+03")
  field(EGU,     "ms")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}T:CircXScale_")
}

record(acalcout, "$(S1){$(D1)-$(SD6)}T:CircXScale_") {
  field(CALC,    "AA*B*C")
  field(INAA,    "$(S1){$(D1)-$(SD6)}T:CircCnt-I")
  field(INPB,    "$(S1){$(D1)-$(SD6)}T:CircPeriod_")
# Circular buffer stores 2 values, I and Q, of 5 multiplexed channels
# Thus each sample interval on time scale is index * clock (25 ns) * (2*5)
# 2*5 = 10 = INPC
  field(INPC,    "10.0")
  field(OOPT,    "Every Time")
  field(DOPT,    "Use CALC")
  field(NELM,    "$(NELM2)")
  field(NUSE,    "$(NELM2)")
  field(OUT,     "$(S1){$(D1)-$(SD6)}T:Circ-I")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}T:Circ-I")
}

record(waveform, "$(S1){$(D1)-$(SD6)}T:Circ-I") {
  field(FTVL,    "DOUBLE")
  field(EGU,     "ms")
  field(NELM,    "$(NELM2)")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}T:Circ2_")
}

record(aSub,     "$(S1){$(D1)-$(SD6)}T:Circ2_") {
  field(DESC,    "Decimate:")
  field(SNAM,    "Decimate")
  field(NOA,     "$(NELM2)")
  field(FTA,     "DOUBLE")
  field(INPA,    "$(S1){$(D1)-$(SD6)}T:Circ-I")
  field(INPB,    "0")
  field(INPC,    "2048")
  field(FTVA,    "DOUBLE")
  field(NOVA,    "$(NELM3)")
  field(OUTA,    "$(S1){$(D1)-$(SD6)}T:Circ2-I")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}T:Circ2-I")
}

record(waveform, "$(S1){$(D1)-$(SD6)}T:Circ2-I") {
  field(FTVL,    "DOUBLE")
  field(EGU,     "ms")
# Decimated by factor 2048, NELM3 should be 832 (<= 1 703 936 / 2048)
  field(NELM,    "$(NELM3)")
}

record(longout,  "$(S1){$(D1)-$(SD6)}Val:Scale") {
   field(VAL,    "32767")
   field(PINI,   "YES")
}

#
# Dump circular buffer into a ASCII file
#
# Input:
# Waveform with timestamps in [ms] 
# All waveforms are of length 0x1A0000 = 1703936
# 10 waveforms, one for each channel, with I/Q values $(S1){$(D1)-$(SD6)}Ch0:I-I, $(S1){$(D1)-$(SD6)}Ch0:Q-I ... $(S1){$(D1)-$(SD6)}Ch4:I-I, $(S1){$(D1)-$(SD6)}Ch4:Q-I ...
# Waveform with filename
#

record(waveform, "$(S1){$(D1)-$(SD6)}ID:File") {
  field(DTYP,    "fileread")
  field(INP,     "@$(L)BUF.TXT 0")
  field(FTVL,    "CHAR")
  field(NELM,    "128")
  field(PINI,    "YES")
  info(autosaveFields_pass0, "VAL")
}

record(longin,   "$(S1){$(D1)-$(SD6)}DI:Dmpmask") {
  field(PINI,    "YES")
  field(VAL,     "0")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Rst:FillSt")
}
#
# Buffers Ready-For-Readout indicator:
#
record(longin,    "$(S1){$(D1)-$(SD6)}DI:ChRdy") {
  field(VAL,      "0")
  field(PINI,     "YES")
  field(FLNK,     "$(S1){$(D1)-$(SD6)}Rdy:1-Calc")
}

record(calcout,   "$(S1){$(D1)-$(SD6)}Rdy:1-Calc") {
  field(DESC,     "Chs ready for readout:")
  field(CALC,     "((A==4)&&(B>3)&&(C==0))?1:0")
  field(INPA,     "$(S1){$(D1)-$(SD6)}DI:Dmpmask")
  field(INPB,     "$(S1){$(D1)-$(SD6)}Cnt:Chg")
  field(INPC,     "$(S1){$(D1)-$(SD6)}State:Prog-Sts")
  field(OUT,      "$(S1){$(D1)-$(SD6)}Rdy:I PP")
  field(ODLY,     "2.5")
}

record(bo,       "$(S1){$(D1)-$(SD6)}Rdy:I") {
  field(ZNAM,    "NOT Ready")
  field(ONAM,    "Ready")
  field(HIGH,    "6")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Rdy:Clr-Calc")
}

record(calcout,   "$(S1){$(D1)-$(SD6)}Rdy:Clr-Calc") {
  field(DESC,     "Clear the last page changed cnt:")
  field(CALC,     "0")
  field(OUT,      "$(S1){$(D1)-$(SD6)}Cnt:Chg PP")
}

#
# Reset the SDRAM Fill Started indicator
#
record(calcout,  "$(S1){$(D1)-$(SD6)}Rst:FillSt") {
  field(CALC,    "(A!=4)?B:0")
  field(INPA,    "$(S1){$(D1)-$(SD6)}DI:Dmpmask")
  field(INPB,    "$(S1){$(D1)-$(SD6)}DI:FillStart")
  field(OUT,     "$(S1){$(D1)-$(SD6)}DI:FillStart PP")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Time:T1")
}

record(stringin, "$(S1){$(D1)-$(SD6)}Time:T1") {
  field(DESC,    "Dump started at:")
  field(DTYP,    "Soft Timestamp")
  field(INP,     "@%m/%d/%Y %H:%M:%S.%03f")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cmd:Dump-seq")
}

record(seq,      "$(S1){$(D1)-$(SD6)}Cmd:Dump-seq") {
  field(SELM,    "Mask")
  field(SELL,    "$(S1){$(D1)-$(SD6)}DI:Dmpmask")
  field(DO3,     "1")
  field(LNK3,    "$(S1){$(D1)-$(SD6)}Cmd:Dump.PROC PP")
  field(DLY3,    "5")
}

record(aSub,     "$(S1){$(D1)-$(SD6)}Cmd:Dump") {
  field(DESC,    "Dump circ buf into file:")
  field(SNAM,    "CircDump")
  field(NOA,     "$(NELM2)")
  field(FTA,     "DOUBLE")
  field(INPA,    "$(S1){$(D1)-$(SD6)}T:Circ-I")
#
  field(NOB,     "$(NELM2)")
  field(FTB,     "DOUBLE")
  field(INPB,    "$(S1){$(D1)-$(SD6)-$(TD1):0}Val:I-I PP MMS")
#
  field(NOC,     "$(NELM2)")
  field(FTC,     "DOUBLE")
  field(INPC,    "$(S1){$(D1)-$(SD6)-$(TD1):0}Val:Q-I PP MMS")
#
  field(NOD,     "$(NELM2)")
  field(FTD,     "DOUBLE")
  field(INPD,    "$(S1){$(D1)-$(SD6)-$(TD1):1}Val:I-I PP MMS")
#
  field(NOE,     "$(NELM2)")
  field(FTE,     "DOUBLE")
  field(INPE,    "$(S1){$(D1)-$(SD6)-$(TD1):1}Val:Q-I PP MMS")
#
  field(NOF,     "$(NELM2)")
  field(FTF,     "DOUBLE")
  field(INPF,    "$(S1){$(D1)-$(SD6)-$(TD1):2}Val:I-I PP MMS")
#
  field(NOG,     "$(NELM2)")
  field(FTG,     "DOUBLE")
  field(INPG,    "$(S1){$(D1)-$(SD6)-$(TD1):2}Val:Q-I PP MMS")
#
  field(NOH,     "$(NELM2)")
  field(FTH,     "DOUBLE")
  field(INPH,    "$(S1){$(D1)-$(SD6)-$(TD1):3}Val:I-I PP MMS")
#
  field(NOI,     "$(NELM2)")
  field(FTI,     "DOUBLE")
  field(INPI,    "$(S1){$(D1)-$(SD6)-$(TD1):3}Val:Q-I PP MMS")
#
  field(NOJ,     "$(NELM2)")
  field(FTJ,     "DOUBLE")
  field(INPJ,    "$(S1){$(D1)-$(SD6)-$(TD1):4}Val:I-I PP MMS")
#
  field(NOK,     "$(NELM2)")
  field(FTK,     "DOUBLE")
  field(INPK,    "$(S1){$(D1)-$(SD6)-$(TD1):4}Val:Q-I PP MMS")
#
  field(NOL,     "128")
  field(FTL,     "CHAR")
  field(INPL,    "$(S1){$(D1)-$(SD6)}ID:File")
#
  field(NOM,     "128")
  field(FTM,     "ULONG")
  field(INPM,    "$(S1){$(D1)-$(SD6)}Pos:PLast")
#
  field(NON,     "1")
  field(FTN,     "STRING")
  field(INPN,    "$(S1){$(D1)-$(SD6)}Time:T1")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cmd:Time")
}

record(stringin, "$(S1){$(D1)-$(SD6)}Cmd:Time") {
  field(DESC,    "Dump completed at:")
  field(DTYP,    "Soft Timestamp")
  field(INP,     "@%m/%d/%Y %H:%M:%S.%03f")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cmd:Fcpy-seq")
}
#
# In 10 seconds notify Elauncher for fcpy:
#
# May 22, 2017: B. Holub: After 2 min.
# Re-arm the buffer if _NO_RF-Inhibit
# Since re-arm trips the buffer 3 times
# cannot use auto-rearm on that.
# Temporarily use DI:Ep2F-I (Limiter active) for Auto-rearm
#
record(seq,      "$(S1){$(D1)-$(SD6)}Cmd:Fcpy-seq") {
  field(DESC,    "Fcpy file:")
  field(DO1,     "1")
  field(LNK1,    "$(S1){$(D1)}Cmd:Fcpy CPP")
  field(DLY1,    "10")
#  field(DO2,     "0")
#  field(LNK2,    "$(S1){$(D1)-$(SD6)}DI:Dmpmask PP")
#  field(DLY2,    "1")
#  field(DO3,     "1")
#  field(LNK3,    "$(S1){$(D1)-$(SD6)}Cmd:ReArm-Calc PP")
#  field(DLY3,    "30")
   field(TPRO,    "1")
}

record(calcout,  "$(S1){$(D1)-$(SD6)}Cmd:ReArm-Calc") {
  field(DESC,    "If !Rf Inhibit - Rearm!")
  field(CALC,    "(!A&&!B)?1:0")
  field(INPA,    "$(S1){$(D1)}DI:B05Ep20")
  field(INPB,    "$(S1){$(D1)-$(SD6)}DI:Dmpmask")
#
# RF Inhibit = $(S1){$(D1)}DI:B05Ep20
#
#  field(OUT,     "$(S1){$(D1)-$(SD6)}State:Arm00 PP")
  field(OOPT,    "When Non-zero")
  field(TPRO,    "1")
}

# JAN 17, 2016
# At the end sync up -RAM}Enbl:Read & Enbl:Write
# Set Enbl:Read = 1; Enbl:Write = 0;
record(calcout,  "$(S1){$(D1)-$(SD6)}Cmd:SyncRd") {
  field(CALC,    "1")
  field(OUT,     "$(S1){$(D1)-$(SD6)}Enbl:Read PP")
  field(FLNK,    "$(S1){$(D1)-$(SD6)}Cmd:SyncWr")
}

record(calcout,  "$(S1){$(D1)-$(SD6)}Cmd:SyncWr") {
  field(CALC,    "0")
  field(OUT,     "$(S1){$(D1)-$(SD6)}Enbl:Write PP")
}

# Sep. 25, 2017: Added External Circular Buffer
# Trigger Enable (bit 9 of EP SDRAM

record(bo,       "$(S1){$(D1)-$(SD6)}Enbl:ExTr-SP") {
  field(ZNAM,    "Disable")
  field(ONAM,    "Enable")
  field(OUT,     "$(S1){$(D1)-$(SD6)}Enbl:ExTr_ PP")
  info(autosaveFields_pass0, "VAL")
}

record(longout,  "$(S1){$(D1)-$(SD6)}Enbl:ExTr_") {
  field(DTYP,    "asynInt32")
  field(OMSL,    "closed_loop")
  field(DOL,     "$(S1){$(D1)-$(SD6)}Enbl:ExTr-SP")
  field(OUT,     "@asyn($(PORT),0)Enbl EBT")
}

